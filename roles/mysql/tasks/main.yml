#
#  # curl -s -L -o /tmp/mysql.zip "https://github.com/roboshop-devops-project/mysql/archive/main.zip"
#    Load the schema for Services.
#
#  # cd /tmp
#  # unzip mysql.zip
#  # cd mysql-main
## mysql -u root -pRoboShop@1 <shipping.sql
- name: copy mysql repo file
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo
- name: install mysql server & mysql module
  ansible.builtin.yum:
    name:
    - mysql-community-server
    - MySQL-python
    state: installed
- name: start mysql service
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: true
- name: check if the new root password is working or not
  community.mysql.mysql_query:
    query: "show databases"
    login_user: root
    login_password: "{{MYSQL_ROOT_PASSWORD}}"
  register: out
  ignore_errors: true
- name: change the default password
  when: out.failed | bool
  block:
    - name: grabbing default password
      ansible.builtin.shell: sudo grep 'temporary password' /var/log/mysqld.log|awk '{print $NF}'
      register: default_password

    - name: copy sql script for password reset
      ansible.builtin.template:
        src: root-pass-recent.sql
        dest: /tmp/root-pass-recent.sql

    - name: change mysql password
      ansible.builtin.shell: mysql --connect-expired-password -uroot -p"{{default_password.stdout}}" </tmp/root-pass-recent.sql

- name: uninstall validate password plugin
  ansible.builtin.shell: (echo 'show plugins;' | mysql -uroot -p"{{MYSQL_ROOT_PASSWORD}}" | grep validate_password) && (echo 'uninstall plugin validate_password;' | mysql -uroot -p"{{MYSQL_ROOT_PASSWORD}}")
  ignore_errors: true

- name: download mysql schema
  ansible.builtin.import_role:
    name: common
    tasks_from: download

- name: Load mysql schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /tmp/mysql-main/shipping.sql
    login_user: root
    login_password: "{{MYSQL_ROOT_PASSWORD}}"
